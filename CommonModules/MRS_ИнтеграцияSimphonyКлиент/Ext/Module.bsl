#Область ПрограммныйИнтерфейс

#Область РаботаСФормами

// Открывает форму истории синхронизации для позиции меню
//
// Параметры:
//  ПозицияМеню - СправочникСсылка.питМеню - позиция для отображения истории
//
Процедура ОткрытьФормуИсторииСинхронизации(ПозицияМеню) Экспорт
	
	Если Не ЗначениеЗаполнено(ПозицияМеню) Тогда
		ПоказатьПредупреждение(, "Не выбрана позиция меню");
		Возврат;
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Отбор", Новый Структура("ПозицияМеню", ПозицияМеню));
	
	ОткрытьФорму("РегистрСведений.MRS_ИсторияСинхронизацииМенюSimphony.ФормаСписка", ПараметрыФормы);
	
КонецПроцедуры

// Показывает сообщение об ошибке пользователю
//
// Параметры:
//  ТекстОшибки - Строка - текст сообщения об ошибке
//
Процедура ПоказатьСообщениеОбОшибке(ТекстОшибки) Экспорт
	
	ПоказатьПредупреждение(, ТекстОшибки, 10, "Ошибка синхронизации Simphony");
	
КонецПроцедуры

// Обновляет отображение статуса на форме
//
// Параметры:
//  Форма - ФормаКлиентскогоПриложения - форма для обновления
//
Процедура ОбновитьСтатусНаФорме(Форма) Экспорт
	
	// TODO: Реализовать после доработки форм
	// Обновление элементов формы с отображением статуса
	
КонецПроцедуры

#КонецОбласти

#Область ИнтерактивныеДействия

// Подтверждает действие у пользователя
//
// Параметры:
//  Текст - Строка - текст вопроса
//  ОбработчикЗавершения - ОписаниеОповещения - обработчик результата
//
Процедура ПодтвердитьДействие(Текст, ОбработчикЗавершения) Экспорт
	
	ПоказатьВопрос(ОбработчикЗавершения, Текст, РежимДиалогаВопрос.ДаНет);
	
КонецПроцедуры

// Показывает информационное сообщение
//
// Параметры:
//  Текст - Строка - текст сообщения
//
Процедура ПоказатьИнформацию(Текст) Экспорт
	
	ПоказатьОповещениеПользователя("Simphony", , Текст);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

