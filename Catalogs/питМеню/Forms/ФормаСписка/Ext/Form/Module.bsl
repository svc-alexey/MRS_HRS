////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Добавляем колонки для синхронизации Simphony
	ДобавитьКолонкиСинхронизацииSimphony();
	
	// Настраиваем условное оформление
	НастроитьУсловноеОформление();
	
	// Настраиваем коллекцию картинок для списка
	НастроитьКоллекциюКартинокСписка();
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	
	// Обновляем картинку статуса при выборе строки
	ОбновитьКартинкуСтатусаТекущейСтроки();
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервере
Процедура ДобавитьКолонкиСинхронизацииSimphony()
	
	// Добавляем поле для картинки статуса в динамический список
	КартинкаСтатуса = Список.КомпоновщикНастроек.Настройки.Выбор.Элементы.Добавить(Тип("ВыбранноеПолеКомпоновкиДанных"));
	КартинкаСтатуса.Поле = Новый ПолеКомпоновкиДанных("MRS_СтатусСинхронизацииSimphony");
	КартинкаСтатуса.Использование = Истина;
	
	// Добавляем поле для кода Simphony
	КодSimphony = Список.КомпоновщикНастроек.Настройки.Выбор.Элементы.Добавить(Тип("ВыбранноеПолеКомпоновкиДанных"));
	КодSimphony.Поле = Новый ПолеКомпоновкиДанных("MRS_КодSimphony");
	КодSimphony.Использование = Истина;
	
	// Настраиваем элементы формы для отображения
	ДобавитьЭлементыФормыНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьЭлементыФормыНаСервере()
	
	// Находим таблицу списка
	ТаблицаСписка = Элементы.Список;
	
	// Добавляем колонку с картинкой статуса (первой)
	Попытка
		ПолеКартинки = Элементы.Добавить("СписокКартинкаСтатуса", Тип("ПолеФормы"), ТаблицаСписка);
		ПолеКартинки.Вид = ВидПоляФормы.ПолеКартинки;
		ПолеКартинки.ПутьКДанным = "Список.MRS_СтатусСинхронизацииSimphony";
		ПолеКартинки.Заголовок = "";
		ПолеКартинки.Ширина = 3;
		ПолеКартинки.ГоризонтальноеПоложение = ГоризонтальноеПоложение.Лево;
		
		// Перемещаем в начало
		Элементы.Переместить(ПолеКартинки, ТаблицаСписка, Элементы.Наименование);
	Исключение
		// Колонка уже существует или ошибка добавления - игнорируем
		Возврат;
	КонецПопытки;
	
	// Добавляем колонку для статуса синхронизации
	Попытка
		ПолеСтатуса = Элементы.Добавить("СписокMRS_СтатусСинхронизацииSimphony", Тип("ПолеФормы"), ТаблицаСписка);
		ПолеСтатуса.Вид = ВидПоляФормы.ПолеНадписи;
		ПолеСтатуса.ПутьКДанным = "Список.MRS_СтатусСинхронизацииSimphony";
		ПолеСтатуса.Заголовок = "Статус синхронизации";
		ПолеСтатуса.Ширина = 18;
	Исключение
		// Колонка уже существует - игнорируем
		Возврат;
	КонецПопытки;
	
	// Добавляем колонку для кода Simphony
	Попытка
		ПолеКода = Элементы.Добавить("СписокMRS_КодSimphony", Тип("ПолеФормы"), ТаблицаСписка);
		ПолеКода.Вид = ВидПоляФормы.ПолеНадписи;
		ПолеКода.ПутьКДанным = "Список.MRS_КодSimphony";
		ПолеКода.Заголовок = "Код Simphony";
		ПолеКода.Ширина = 12;
	Исключение
		// Колонка уже существует - игнорируем
		Возврат;
	КонецПопытки;
	
КонецПроцедуры

&НаСервере
Процедура НастроитьУсловноеОформление()
	
	// Очищаем существующее условное оформление
	УсловноеОформление.Элементы.Очистить();
	
	// Получаем коллекцию картинок
	КоллекцияКартинок = БиблиотекаКартинок.КоллекцияшаровБЭД;
	
	// Условное оформление для картинки статуса
	
	// Статус: НеВыгружено (серый шар, индекс 2)
	ЭлементУО = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = ЭлементУО.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных("СписокКартинкаСтатуса");
	
	ОтборЭлемента = ЭлементУО.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Список.MRS_СтатусСинхронизацииSimphony");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Перечисления.MRS_СтатусыСинхронизацииSimphony.НеВыгружено;
	
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("ИндексКартинки", 2);
	
	// Статус: ВОчереди (желтый шар, индекс 1)
	ЭлементУО = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = ЭлементУО.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных("СписокКартинкаСтатуса");
	
	ОтборЭлемента = ЭлементУО.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Список.MRS_СтатусСинхронизацииSimphony");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Перечисления.MRS_СтатусыСинхронизацииSimphony.ВОчереди;
	
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("ИндексКартинки", 1);
	
	// Статус: Выгружено (зеленый шар, индекс 3)
	ЭлементУО = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = ЭлементУО.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных("СписокКартинкаСтатуса");
	
	ОтборЭлемента = ЭлементУО.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Список.MRS_СтатусСинхронизацииSimphony");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Перечисления.MRS_СтатусыСинхронизацииSimphony.Выгружено;
	
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("ИндексКартинки", 3);
	
	// Статус: Ошибка (желтый шар, индекс 1)
	ЭлементУО = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = ЭлементУО.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных("СписокКартинкаСтатуса");
	
	ОтборЭлемента = ЭлементУО.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Список.MRS_СтатусСинхронизацииSimphony");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Перечисления.MRS_СтатусыСинхронизацииSimphony.Ошибка;
	
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("ИндексКартинки", 1);
	
	// Статус: ТребуетВнимания (красный шар, индекс 0)
	ЭлементУО = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = ЭлементУО.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных("СписокКартинкаСтатуса");
	
	ОтборЭлемента = ЭлементУО.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Список.MRS_СтатусСинхронизацииSimphony");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Перечисления.MRS_СтатусыСинхронизацииSimphony.ТребуетВнимания;
	
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("ИндексКартинки", 0);
	
	// Условное оформление текста для статусов с ошибками
	
	// Красный текст для строк с критическими ошибками
	ЭлементУО = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = ЭлементУО.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных("СписокMRS_СтатусСинхронизацииSimphony");
	
	ОтборЭлемента = ЭлементУО.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Список.MRS_СтатусСинхронизацииSimphony");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Перечисления.MRS_СтатусыСинхронизацииSimphony.ТребуетВнимания;
	
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("ЦветТекста", WebЦвета.Красный);
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("Шрифт", Новый Шрифт(, , Истина));
	
	// Зеленый текст для успешно выгруженных
	ЭлементУО = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = ЭлементУО.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных("СписокMRS_СтатусСинхронизацииSimphony");
	
	ОтборЭлемента = ЭлементУО.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Список.MRS_СтатусСинхронизацииSimphony");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Перечисления.MRS_СтатусыСинхронизацииSimphony.Выгружено;
	
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("ЦветТекста", WebЦвета.ЗеленыйЛес);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьКартинкуСтатусаТекущейСтроки()
	
	// Получаем текущую строку
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура НастроитьКоллекциюКартинокСписка()
	
	// Настраиваем свойства динамического списка для работы с коллекцией картинок
	Попытка
		// Устанавливаем коллекцию картинок для строк списка
		Элементы.Список.КартинкаСтрок = БиблиотекаКартинок.КоллекцияшаровБЭД;
	Исключение
		// Игнорируем ошибки настройки
	КонецПопытки;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьИндексКартинкиСтатуса(Статус)
	
	// Возвращает индекс картинки из коллекции КоллекцияшаровБЭД
	// 0 - красный, 1 - желтый, 2 - серый, 3 - зеленый
	
	Если Статус = Перечисления.MRS_СтатусыСинхронизацииSimphony.НеВыгружено Тогда
		Возврат 2; // Серый
		
	ИначеЕсли Статус = Перечисления.MRS_СтатусыСинхронизацииSimphony.ВОчереди Тогда
		Возврат 1; // Желтый
		
	ИначеЕсли Статус = Перечисления.MRS_СтатусыСинхронизацииSimphony.Выгружено Тогда
		Возврат 3; // Зеленый
		
	ИначеЕсли Статус = Перечисления.MRS_СтатусыСинхронизацииSimphony.Ошибка Тогда
		Возврат 1; // Желтый (нет оранжевого)
		
	ИначеЕсли Статус = Перечисления.MRS_СтатусыСинхронизацииSimphony.ТребуетВнимания Тогда
		Возврат 0; // Красный
		
	Иначе
		Возврат 2; // По умолчанию серый
		
	КонецЕсли;
	
КонецФункции

