////////////////////////////////////////////////////////////////////////////////
// ОБРАБОТЧИКИ СОБЫТИЙ ФОРМЫ

&После("ПриСозданииНаСервере")
Процедура MRS_ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Добавляем колонки для синхронизации Simphony
	ДобавитьКолонкиСинхронизацииSimphony();
	
	// Настраиваем условное оформление
	НастроитьУсловноеОформление();
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// СЛУЖЕБНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

&НаСервере
Процедура ДобавитьКолонкиСинхронизацииSimphony()
	
	// Добавляем поле для картинки статуса в динамический список
	КартинкаСтатуса = Список.КомпоновщикНастроек.Настройки.Выбор.Элементы.Добавить(Тип("ВыбранноеПолеКомпоновкиДанных"));
	КартинкаСтатуса.Поле = Новый ПолеКомпоновкиДанных("MRS_СтатусСинхронизацииSimphony");
	КартинкаСтатуса.Использование = Истина;
	
	// Добавляем поле для кода Simphony
	КодSimphony = Список.КомпоновщикНастроек.Настройки.Выбор.Элементы.Добавить(Тип("ВыбранноеПолеКомпоновкиДанных"));
	КодSimphony.Поле = Новый ПолеКомпоновкиДанных("MRS_КодSimphony");
	КодSimphony.Использование = Истина;
	
	// Настраиваем элементы формы для отображения
	ДобавитьЭлементыФормыНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьЭлементыФормыНаСервере()
	
	// Находим таблицу списка
	ТаблицаСписка = Элементы.Список;
	
	// Добавляем колонку для статуса синхронизации (с цветовыми индикаторами через условное оформление)
	Попытка
		ПолеСтатуса = Элементы.Добавить("СписокMRS_СтатусСинхронизацииSimphony", Тип("ПолеФормы"), ТаблицаСписка);
		ПолеСтатуса.Вид = ВидПоляФормы.ПолеНадписи;
		ПолеСтатуса.ПутьКДанным = "Список.MRS_СтатусСинхронизацииSimphony";
		ПолеСтатуса.Заголовок = "Статус";
		ПолеСтатуса.Ширина = 18;
		
		// Перемещаем в начало
		Элементы.Переместить(ПолеСтатуса, ТаблицаСписка, Элементы.Наименование);
	Исключение
		// Игнорируем ошибку (колонка уже существует или проблемы с добавлением)
		Возврат;
	КонецПопытки;
	
	// Добавляем колонку для кода Simphony
	Попытка
		ПолеКода = Элементы.Добавить("СписокMRS_КодSimphony", Тип("ПолеФормы"), ТаблицаСписка);
		ПолеКода.Вид = ВидПоляФормы.ПолеНадписи;
		ПолеКода.ПутьКДанным = "Список.MRS_КодSimphony";
		ПолеКода.Заголовок = "Код Simphony";
		ПолеКода.Ширина = 12;
	Исключение
		// Игнорируем ошибку (колонка уже существует или проблемы с добавлением)
		Возврат;
	КонецПопытки;
	
КонецПроцедуры

&НаСервере
Процедура НастроитьУсловноеОформление()
	
	// Очищаем существующее условное оформление
	УсловноеОформление.Элементы.Очистить();
	
	// Условное оформление текста для статусов с ошибками
	
	// Красный текст для строк с критическими ошибками
	ЭлементУО = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = ЭлементУО.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных("СписокMRS_СтатусСинхронизацииSimphony");
	
	ОтборЭлемента = ЭлементУО.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Список.MRS_СтатусСинхронизацииSimphony");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Перечисления.MRS_СтатусыСинхронизацииSimphony.ТребуетВнимания;
	
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("ЦветТекста", WebЦвета.Красный);
	
	// Зеленый текст для успешно выгруженных
	ЭлементУО = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = ЭлементУО.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных("СписокMRS_СтатусСинхронизацииSimphony");
	
	ОтборЭлемента = ЭлементУО.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Список.MRS_СтатусСинхронизацииSimphony");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Перечисления.MRS_СтатусыСинхронизацииSimphony.Выгружено;
	
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("ЦветТекста", WebЦвета.ЗеленыйЛес);
	
КонецПроцедуры
